<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.owen.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.owen.model.Employee">
        <id column="emp_no" jdbcType="INTEGER" property="empNo" />
        <result column="birth_date" jdbcType="DATE" property="birthDate" />
        <result column="first_name" jdbcType="VARCHAR" property="firstName" />
        <result column="last_name" jdbcType="VARCHAR" property="lastName" />
        <result column="gender" jdbcType="CHAR" property="gender" />
        <result column="hire_date" jdbcType="DATE" property="hireDate" />
    </resultMap>
    <sql id="Base_Column_List">
        emp_no, birth_date, first_name, last_name, gender, hire_date
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from employees
        where emp_no = #{empNo,jdbcType=INTEGER}
    </select>
    <select id="queryEmployeeByPage" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employees
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employees
        where emp_no = #{empNo,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.owen.model.Employee">
        insert into employees (emp_no, birth_date, first_name,
        last_name, gender, hire_date
        )
        values (#{empNo,jdbcType=INTEGER}, #{birthDate,jdbcType=DATE}, #{firstName,jdbcType=VARCHAR},
        #{lastName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{hireDate,jdbcType=DATE}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.owen.model.Employee">
        insert into employees
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empNo != null">
                emp_no,
            </if>
            <if test="birthDate != null">
                birth_date,
            </if>
            <if test="firstName != null">
                first_name,
            </if>
            <if test="lastName != null">
                last_name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="hireDate != null">
                hire_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empNo != null">
                #{empNo,jdbcType=INTEGER},
            </if>
            <if test="birthDate != null">
                #{birthDate,jdbcType=DATE},
            </if>
            <if test="firstName != null">
                #{firstName,jdbcType=VARCHAR},
            </if>
            <if test="lastName != null">
                #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="hireDate != null">
                #{hireDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.owen.model.Employee">
        update employees
        <set>
            <if test="birthDate != null">
                birth_date = #{birthDate,jdbcType=DATE},
            </if>
            <if test="firstName != null">
                first_name = #{firstName,jdbcType=VARCHAR},
            </if>
            <if test="lastName != null">
                last_name = #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="hireDate != null">
                hire_date = #{hireDate,jdbcType=DATE},
            </if>
        </set>
        where emp_no = #{empNo,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.owen.model.Employee">
        update employees
        set birth_date = #{birthDate,jdbcType=DATE},
        first_name = #{firstName,jdbcType=VARCHAR},
        last_name = #{lastName,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=CHAR},
        hire_date = #{hireDate,jdbcType=DATE}
        where emp_no = #{empNo,jdbcType=INTEGER}
    </update>
</mapper>